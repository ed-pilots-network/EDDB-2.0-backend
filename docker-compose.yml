version: "3.8"

name: "edpn-backend"
services:
  zookeeper:
    image: "bitnami/zookeeper:3.8"
    restart: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - "zookeeper:/bitnami"
      - "./container_config/zookeeper/log4j.properties:/opt/bitnami/zookeeper/conf/log4j.properties"
    healthcheck:
      test: nc -vz zookeeper 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 0s

  kafka:
    image: "bitnami/kafka:3.4"
    restart: on-failure
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_COMPRESSION_TYPE=gzip
      - KAFKA_LOG_RETENTION_HOURS=240
      - KAFKA_LOG_RETENTION_BYTES=2147483648
    volumes:
      - "kafka:/bitnami/kafka"
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka:9092
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      zookeeper:
        condition: service_healthy

  trademodule_postgres:
    image: "postgres:15-alpine"
    restart: on-failure
    env_file:
      - env/.env_trademodule
    volumes:
      - "trademodule_postgres:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5

  eddn-message-listener:
    image: nexus.edpn.io/edpn/backend/eddn-message-listener:latest-snapshot
    restart: on-failure
    env_file:
      - env/.env_eddn_message_listener
    healthcheck:
      test: "wget -qO- eddn-message-listener:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      kafka:
        condition: service_healthy

  modulith:
    image: nexus.edpn.io/edpn/backend/modulith:latest-snapshot
    restart: on-failure
    env_file:
      - env/.env_modulith
    ports:
      - "8080:8080"
    healthcheck:
      test: "wget -qO- modulith:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  zookeeper:
    driver: local
  kafka:
    driver: local
  trademodule_postgres:
    driver: local
